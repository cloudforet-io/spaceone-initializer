tasks:
  - name: Create Domain
    id: domain
    uses: "@modules/resource"
    spec:
      resource_type: identity.Domain
      data:
        name: ${{ var.domain_name }}
      matches:
        - name
      mode: NO_UPDATE

  - name: Create DomainOwner
    id: domain_owner
    uses: "@modules/resource"
    spec:
      resource_type: identity.DomainOwner
      data:
        name: Domain Admin
        owner_id: ${{ var.domain_owner }}
        password: ${{ var.domain_owner_password }}
        domain_id: ${{ tasks.domain.output.domain_id }}
      matches:
        - domain_id
      mode: NO_UPDATE
      verb:
        read: get

  - name: Create DomainOwner Token
    id: domain_owner_token
    uses: "@modules/resource"
    spec:
      resource_type: identity.Token
      data:
        user_type: DOMAIN_OWNER
        user_id: ${{ tasks.domain_owner.spec.data.owner_id }}
        credentials:
          password: ${{ tasks.domain_owner.spec.data.password }}
        domain_id: ${{ tasks.domain.output.domain_id }}
      mode: EXEC
      verb:
        exec: issue

  - name: Update spacectl configure
    id: shell
    uses: "@modules/shell"
    spec:
      run: |
        spacectl config set api_key ${{ tasks.domain_owner_token.output.access_token }}

  - name: Create project admin role
    id: project_admin_role
    uses: "@modules/resource"
    spec:
      resource_type: identity.Role
      data:
        name: Project Admin
        role_type: PROJECT
        policies:
          - policy_type: ${{ var.project_admin_policy_type }}
            policy_id: ${{ var.project_admin_policy_id }}
        domain_id: ${{ tasks.domain.output.domain_id }}
      mode: EXEC
      verb:
        exec: create

  - name: Create domain admin role
    id: domain_admin_role
    uses: "@modules/resource"
    spec:
      resource_type: identity.Role
      data:
        name: Domain Admin
        role_type: DOMAIN
        policies:
          - policy_type: ${{ var.domain_admin_policy_type }}
            policy_id: ${{ var.domain_admin_policy_id }}
        domain_id: ${{ tasks.domain.output.domain_id }}
      mode: EXEC
      verb:
        exec: create
        
  - name: List Notification protocol
    id: list_notification_protocol
    uses: "@modules/shell"
    spec:
      run: |
        spacectl list Notification.protocol -p domain_id=${{ tasks.domain.output.domain_id }}
        
  - name: List Monitoring DataSource
    id: list_monitoring_datasource
    uses: "@modules/shell"
    spec:
      run: |
        spacectl list Monitoring.DataSource -p domain_id=${{ tasks.domain.output.domain_id }}
        
  - name: List Billing DataSource
    id: list_billing_datasource
    uses: "@modules/shell"
    spec:
      run: |
        spacectl list Billing.DataSource -p domain_id=${{ tasks.domain.output.domain_id }}
