{{ if .Values.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: initialize-spaceone-{{ randAlphaNum 5 | lower }}
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    helm.stargate.spaceone.dev/service: initialize-spaceone
{{ include "spaceone.labels" . | indent 4 }}
spec:
  activeDeadlineSeconds: 3000
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        helm.stargate.spaceone.dev/service: initialize-spaceone
{{ include "spaceone.labels" . | indent 8 }}
    spec:
{{- if .Values.global.serviceAccountName }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
{{- end }}
      restartPolicy: OnFailure
{{- if .Values.imagePullSecrets}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end}}
      initContainers:
        - name: job-1-spacectl-conf-writable
          image: {{ .Values.initContainers.spaceconfig.image.name }}:{{ .Values.initContainers.spaceconfig.image.version }}
          imagePullPolicy: {{ .Values.initContainers.spaceconfig.image.imagePullPolicy }}
{{- if .Values.initContainers.spaceconfig.resources }}
          resources:
          {{- toYaml .Values.initContainers.spaceconfig.resources | nindent 12 }}
{{- end }}
          command:
            - sh
            - -c
            - cp -r /root/initializer/spaceconfig/* /root/.spaceone
          volumeMounts:
            - mountPath: /root/.spaceone
              name: writable-spacectl-conf

            - mountPath: /root/initializer/spaceconfig/environment.yml
              name: spacectl-initializer-conf
              subPath: environment.yml
            - mountPath: /root/initializer/spaceconfig/environments/helm-root.yml
              name: spacectl-initializer-conf
              subPath: helm-root.yml
{{- if .Values.global.common_env }}
          env:
{{- toYaml .Values.global.common_env | nindent 12 }}
{{- end }}

      containers:
        - name: job-2-initialize-spaceone
          image: {{ .Values.image.name }}:{{ .Values.image.version }}
          imagePullPolicy: {{ .Values.imagePullPolicy}}
{{- if .Values.resources }}
          resources:
        {{- toYaml .Values.resources | nindent 10 }}
{{- end }}
          env:
            - name: SPACECTL_DEBUG
              value: "true"
{{- if .Values.global.common_env }}
{{- toYaml .Values.global.common_env | nindent 8 }}
{{- end }}
          command:
            - sh
            - /root/initialize.sh
          volumeMounts:
            - mountPath: /root/initialize.sh
              name: start-script-conf
              subPath: initialize.sh

            - mountPath: /root/.spaceone
              name: writable-spacectl-conf
            - mountPath: /root/spacectl/apply
              name: spacectl-apply-files-conf
            - mountPath: /root/spacectl/main.yaml
              name: spacectl-main-conf
              subPath: main.yaml

      volumes:
        - name: start-script-conf
          configMap:
            name: start-script-conf
        - name: spacectl-initializer-conf
          configMap:
            name: spacectl-initializer-conf
        - name: writable-spacectl-conf
          emptyDir: { }
        - name: spacectl-apply-files-conf
          configMap:
            name: spacectl-apply-files-conf
        - name: spacectl-main-conf
          configMap:
            name: spacectl-main-conf
 {{ end }}
